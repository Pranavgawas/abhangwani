import { useState } from "react";
import Home from "./components/Home";
import Search from "./components/Search";
import Favorites from "./components/Favorites";
import Profile from "./components/Profile";
import LanguageToggle from "./components/LanguageToggle";
import PremiumModal from "./components/PremiumModal";
import "./App.css";

export default function BhaktiSagarApp() {
  const [currentTab, setCurrentTab] = useState("home");
  const [language, setLanguage] = useState("marathi");
  const [isPlaying, setIsPlaying] = useState(false);
  const [likedContent, setLikedContent] = useState(new Set([1, 4]));
  const [currentAudio, setCurrentAudio] = useState(null);
  const [showPremiumModal, setShowPremiumModal] = useState(false);
  const [userStreak] = useState(12);
  const [dailyProgress] = useState(4);

  const content = {
    marathi: {
      abhangs: [
        {
          id: 1,
          saint: "рд╕рдВрдд рддреБрдХрд╛рд░рд╛рдо",
          firstLine: "рдЕрд╡рдШрд╛ рд░рдВрдЧ рдПрдХрдЪрд┐ рдЭрд╛рд▓рд╛",
          meaning: "рдЬреЗрд╡реНрд╣рд╛ рднрдХреНрддреА рдкреВрд░реНрдг рд╣реЛрддреЗ рддреЗрд╡реНрд╣рд╛ рд╕рд░реНрд╡ рдХрд╛рд╣реА рдПрдХрд╛рдЪ рд╕рддреНрдпрд╛рдд рд╡рд┐рд▓реАрди рд╣реЛрддреЗ.",
          category: "рдЕрднрдВрдЧ",
          subcategory: "рднрдХреНрддрд┐",
          duration: "3:42",
          plays: "25K",
          hasAudio: true,
          isPremium: false,
          type: "abhang",
        },
        {
          id: 2,
          saint: "рд╕рдВрдд рдЬреНрдЮрд╛рдиреЗрд╢реНрд╡рд░",
          firstLine: "рдкрд╛рдВрдбреБрд░рдВрдЧ рдкрд╛рдВрдбреБрд░рдВрдЧ",
          meaning: "рдкрд╛рдВрдбреБрд░рдВрдЧрд╛рдЪреНрдпрд╛ рдирд╛рд╡рд╛рдЪрд╛ рдЬрдк рдХрд░реВрди рд╢реБрджреНрдз рдкреНрд░реЗрдо рд╡реНрдпрдХреНрдд рдХрд░рдгреЗ.",
          category: "рдЕрднрдВрдЧ",
          subcategory: "рдкреНрд░реЗрдо",
          duration: "2:58",
          plays: "18K",
          hasAudio: true,
          isPremium: true,
          type: "abhang",
        },
      ],
      aartis: [
        {
          id: 3,
          deity: "рд╢реНрд░реА рдЧрдгреЗрд╢",
          title: "рд╕реБрдЦрдХрд░реНрддрд╛ рджреБрдГрдЦрд╣рд░реНрддрд╛",
          meaning: "рдЧрдгрдкрддреА рдмрд╛рдкреНрдкрд╛рдЪреА рдЖрд░рддреА, рд╕реБрдЦ рджреЗрдгрд╛рд░реЗ рдЖрдгрд┐ рджреБрдГрдЦ рд╣рд░рдгрд╛рд░реЗ.",
          category: "рдЖрд░рддреА",
          duration: "4:25",
          plays: "45K",
          hasAudio: true,
          isPremium: false,
          type: "aarti",
          occasion: "рджреИрдирд┐рдХ",
        },
        {
          id: 4,
          deity: "рд╢реНрд░реА рдХреГрд╖реНрдг",
          title: "рдУрд╡рд╛рд│реВ рдЖрд░рддреА",
          meaning: "рд╢реНрд░реА рдХреГрд╖реНрдгрд╛рдЪреА рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЖрд░рддреА.",
          category: "рдЖрд░рддреА",
          duration: "3:15",
          plays: "32K",
          hasAudio: true,
          isPremium: false,
          type: "aarti",
          occasion: "рд╕рдВрдзреНрдпрд╛рдХрд╛рд│",
        },
      ],
    },
    hindi: {
      abhangs: [
        {
          id: 5,
          saint: "рд╕рдВрдд рдХрдмреАрд░",
          firstLine: "рдХрдмреАрд░рд╛ рддреЗрд░рд╛ рдЭреЛрдкрдбрд╝рд╛ рдЧрд▓рдХрдЯрд┐рдпрди рдХреЗ рдкрд╛рд╕",
          meaning: "рдХрдмреАрд░ рдХрд╣рддреЗ рд╣реИрдВ рдХрд┐ рд╕рдЪреНрдЪрд╛ рдЬреНрдЮрд╛рди рд╕рд╛рдзрд╛рд░рдг рд▓реЛрдЧреЛрдВ рдореЗрдВ рдорд┐рд▓рддрд╛ рд╣реИ.",
          category: "рдЕрднрдВрдЧ",
          subcategory: "рдЬреНрдЮрд╛рди",
          duration: "4:12",
          plays: "38K",
          hasAudio: true,
          isPremium: false,
          type: "abhang",
        },
        {
          id: 6,
          saint: "рдореАрд░рд╛рдмрд╛рдИ",
          firstLine: "рдкрд╛рдпреЛ рдЬреА рдореИрдВрдиреЗ рд░рд╛рдо рд░рддрди рдзрди рдкрд╛рдпреЛ",
          meaning: "рдореАрд░рд╛ рдХрд╣рддреА рд╣реИрдВ рдХрд┐ рдЙрдиреНрд╣реЗрдВ рд░рд╛рдо рдирд╛рдо рд░реВрдкреА рд░рддреНрди рдорд┐рд▓рд╛ рд╣реИ.",
          category: "рдЕрднрдВрдЧ",
          subcategory: "рдкреНрд░реЗрдо",
          duration: "3:28",
          plays: "52K",
          hasAudio: true,
          isPremium: true,
          type: "abhang",
        },
      ],
      aartis: [
        {
          id: 7,
          deity: "рд╢реНрд░реА рдЧрдгреЗрд╢",
          title: "рдЬрдп рдЧрдгреЗрд╢ рдЬрдп рдЧрдгреЗрд╢ рджреЗрд╡рд╛",
          meaning: "рдЧрдгрдкрддрд┐ рдЬреА рдХреА рд╣рд┐рдВрджреА рдЖрд░рддреА, рд╕рднреА рд╡рд┐рдШреНрдиреЛрдВ рдХреЗ рд╣рд░реНрддрд╛.",
          category: "рдЖрд░рддреА",
          duration: "3:45",
          plays: "67K",
          hasAudio: true,
          isPremium: false,
          type: "aarti",
          occasion: "рджреИрдирд┐рдХ",
        },
        {
          id: 8,
          deity: "рд╢реНрд░реА рд╣рдиреБрдорд╛рди",
          title: "рдЖрд░рддреА рдХреАрдЬреИ рд╣рдиреБрдорд╛рди рд▓рд▓рд╛ рдХреА",
          meaning: "рд╣рдиреБрдорд╛рди рдЬреА рдХреА рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЖрд░рддреА.",
          category: "рдЖрд░рддреА",
          duration: "4:08",
          plays: "89K",
          hasAudio: true,
          isPremium: false,
          type: "aarti",
          occasion: "рдордВрдЧрд▓рд╡рд╛рд░",
        },
      ],
    },
  };

  const categories = [
    { name: "рдЕрднрдВрдЧ", nameHindi: "рдЕрднрдВрдЧ", icon: "ЁЯУ┐", count: 2547 },
    { name: "рдЖрд░рддреА", nameHindi: "рдЖрд░рддреА", icon: "ЁЯкФ", count: 856 },
    { name: "рднрдЬрди", nameHindi: "рднрдЬрди", icon: "ЁЯО╡", count: 1234 },
    { name: "рд╕реНрддреЛрддреНрд░", nameHindi: "рд╕реНрддреЛрддреНрд░", icon: "ЁЯУЬ", count: 445 },
  ];

  const deities = [
    { name: "рдЧрдгреЗрд╢", nameHindi: "рдЧрдгреЗрд╢", icon: "ЁЯРШ", aartis: 45 },
    { name: "рдХреГрд╖реНрдг", nameHindi: "рдХреГрд╖реНрдг", icon: "ЁЯжЪ", aartis: 78 },
    { name: "рд╢рд┐рд╡", nameHindi: "рд╢рд┐рд╡", icon: "ЁЯФ▒", aartis: 62 },
    { name: "рд░рд╛рдо", nameHindi: "рд░рд╛рдо", icon: "ЁЯП╣", aartis: 54 },
    { name: "рд╣рдиреБрдорд╛рди", nameHindi: "рд╣рдиреБрдорд╛рди", icon: "ЁЯТк", aartis: 38 },
    { name: "рджреБрд░реНрдЧрд╛", nameHindi: "рджреБрд░реНрдЧрд╛", icon: "тЪФя╕П", aartis: 29 },
  ];

  const getCurrentContent = () => {
    const lang = content[language];
    return [...lang.abhangs, ...lang.aartis];
  };

  const playAudio = (item) => {
    if (item.isPremium && !showPremiumModal) {
      setShowPremiumModal(true);
      return;
    }
    setCurrentAudio(item.id);
    setIsPlaying(true);
  };

  const toggleLike = (id) => {
    const newLiked = new Set(likedContent);
    if (newLiked.has(id)) {
      newLiked.delete(id);
    } else {
      newLiked.add(id);
    }
    setLikedContent(newLiked);
  };

  return (
    <div className="app-container">
      <div className="status-bar">
        <span>9:41</span>
        <div>
          <span>5G</span>
          <span>тЧПтЧПтЧПтЧП</span>
          <span>100%</span>
        </div>
      </div>
      <div className="header">
        <div>
          <h1>BhaktiSagar</h1>
          <p>{language === "marathi" ? "рд╕рднреА рднрдХреНрддрд┐ рдПрдХ рд╕реНрдерд╛рди рдкрд░" : "рд╕рднреА рднрдХреНрддрд┐ рдПрдХ рд╕реНрдерд╛рди рдкрд░"}</p>
        </div>
        <div>
          <button onClick={() => setCurrentTab("search")}>ЁЯФН</button>
          <button>ЁЯФФ</button>
        </div>
      </div>
      {isPlaying && currentAudio && (
        <div className="audio-player">
          <button onClick={() => setIsPlaying(false)}>тП╕</button>
          <div>
            <div>
              {getCurrentContent().find((a) => a.id === currentAudio)?.saint ||
                getCurrentContent().find((a) => a.id === currentAudio)?.deity}
            </div>
            <div>
              {(getCurrentContent().find((a) => a.id === currentAudio)?.firstLine?.substring(0, 20) ||
                getCurrentContent().find((a) => a.id === currentAudio)?.title?.substring(0, 20)) + "..."}
            </div>
          </div>
          <button>ЁЯФК</button>
        </div>
      )}
      <div className="content">
        {currentTab === "home" && (
          <Home
            language={language}
            userStreak={userStreak}
            dailyProgress={dailyProgress}
            getCurrentContent={getCurrentContent}
            playAudio={playAudio}
            toggleLike={toggleLike}
            isPlaying={isPlaying}
            currentAudio={currentAudio}
            likedContent={likedContent}
            categories={categories}
            deities={deities}
          />
        )}
        {currentTab === "search" && (
          <Search
            language={language}
            getCurrentContent={getCurrentContent}
            playAudio={playAudio}
            toggleLike={toggleLike}
            likedContent={likedContent}
          />
        )}
        {currentTab === "favorites" && (
          <Favorites
            language={language}
            likedContent={likedContent}
            getCurrentContent={getCurrentContent}
            playAudio={playAudio}
          />
        )}
        {currentTab === "profile" && (
          <Profile
            language={language}
            userStreak={userStreak}
            likedContent={likedContent}
          />
        )}
      </div>
      <div className="nav-bar">
        {[
          { id: "home", icon: "ЁЯПа", label: language === "marathi" ? "рдореБрдЦреНрдп" : "рдореБрдЦреНрдп" },
          { id: "search", icon: "ЁЯФН", label: language === "marathi" ? "рд╢реЛрдз" : "рдЦреЛрдЬ" },
          { id: "favorites", icon: "тЭдя╕П", label: language === "marathi" ? "рдЖрд╡рдбрддреЗ" : "рдкрд╕рдВрджреАрджрд╛" },
          { id: "profile", icon: "ЁЯСд", label: language === "marathi" ? "рдкреНрд░реЛрдлрд╛рдЗрд▓" : "рдкреНрд░реЛрдлрд╛рдЗрд▓" },
        ].map((tab) => (
          <button
            key={tab.id}
            className={`nav-button ${currentTab === tab.id ? "active" : ""}`}
            onClick={() => setCurrentTab(tab.id)}
          >
            <span>{tab.icon}</span>
            <span>{tab.label}</span>
            {tab.id === "favorites" && likedContent.size > 0 && (
              <span className="badge">{likedContent.size}</span>
            )}
          </button>
        ))}
      </div>
      <PremiumModal
        showPremiumModal={showPremiumModal}
        setShowPremiumModal={setShowPremiumModal}
        language={language}
      />
    </div>
  );
}